{
 "components": {
  "rows": [
   {
    "id": "CUSTOMCOMPONENTS",
    "name": "Custom",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "Custom"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "a3911345-7273-c0aa-860f-36fc3728bd36",
    "parent": "CUSTOMCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "mapDyn"
     },
     {
      "name": "parameter",
      "type": "Parameter",
      "value": ""
     },
     {
      "name": "listeners",
      "type": "Listeners",
      "value": "[]"
     },
     {
      "name": "API_KEY",
      "type": "String",
      "value": "0"
     },
     {
      "name": "centerLatitude",
      "type": "Float",
      "value": "-27.888853"
     },
     {
      "name": "centerLongitude",
      "type": "Float",
      "value": "-54.777832"
     },
     {
      "name": "cggGraphParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "colormap",
      "type": "Array",
      "value": "[]"
     },
     {
      "name": "defaultZoomLevel",
      "type": "Integer",
      "value": "3"
     },
     {
      "name": "fillOpacity",
      "type": "Float",
      "value": ""
     },
     {
      "name": "locationResolver",
      "type": "locationResolverCustom",
      "value": "openstreetmap"
     },
     {
      "name": "mapEngineType",
      "type": "mapEngineTypeCustom",
      "value": "openlayers"
     },
     {
      "name": "mapMode",
      "type": "mapModeCustom",
      "value": "markers"
     },
     {
      "name": "marker",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerCggGraph",
      "type": "String",
      "value": ""
     },
     {
      "name": "markerClickFunction",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "markerHeight",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "markerWidth",
      "type": "Integer",
      "value": 25
     },
     {
      "name": "parameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "popupContentsDiv",
      "type": "String",
      "value": ""
     },
     {
      "name": "popupHeight",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "popupParameters",
      "type": "ValuesArray",
      "value": "[]"
     },
     {
      "name": "popupWidth",
      "type": "Integer",
      "value": 250
     },
     {
      "name": "shapeSource",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeColor",
      "type": "String",
      "value": ""
     },
     {
      "name": "strokeWidth",
      "type": "Float",
      "value": ""
     },
     {
      "name": "tilesets",
      "type": "tilesetsCustom",
      "value": "default"
     },
     {
      "name": "dataSource",
      "type": "Datasource",
      "value": "southAmericaDS"
     },
     {
      "name": "priority",
      "type": "Integer",
      "value": 5
     },
     {
      "name": "htmlObject",
      "type": "HtmlObject",
      "value": "${h:mapDynObj}"
     },
     {
      "name": "executeAtStart",
      "type": "Boolean",
      "value": "true"
     },
     {
      "name": "preExecution",
      "type": "JavaScript",
      "value": "function(){\n    \n    /*\n    *\n    * Load the map definition from a GeoJSON file\n    *\n    * It's only rendered in the map those features contained in the resultset.\n    *\n    */\n    \n    var getResource = this.dashboard.getWebAppPath() + '/plugin/pentaho-cdf-dd/api/resources';\n    var mapDef = '${solution:resources/geojson/south-america-markers-geojson.js}';\n\n    this.shapeResolver = 'geoJSON';\n    this.setAddInOptions('ShapeResolver', 'geoJSON', {\n        url: getResource + mapDef, //BA server does not recognize the .geojson extension\n        idPropertyName: 'abbrev' //GeoJSON feature property that will be used to index the feature\n    });\n    \n    /*\n    *\n    * The NMC needs to know what columns in the resultset define\n    * the id, that will be matched with the mapDefinition, what\n    * column represents the size of the marker and what column \n    * represents the value used to match the color.\n    *\n    * There are two ways to do that.\n    *   1 - Have three columns the in resultset called id, fill and r.\n    *   2 - Use the visualRoles to set which columns (base 0) represent the id, fill and r values.\n    *\n    */\n    \n    this.visualRoles = {\n        id: 0,\n        fill: 1\n    };\n    \n    /*\n    *\n    * Set Min and Max size (pixel) for the markers based on the r values\n    *\n    */\n    \n    this.scales.r = [3, 10];    \n    \n} \n "
     },
     {
      "name": "postExecution",
      "type": "JavaScript",
      "value": "function() {\n\n    var myself = this;\n\n    // Define a new color pallete for the shapes\n    var colormap = [\n        [213,238,249],\n        [194,231,246],\n        [175,223,244],\n        [156,216,241],\n        [137,208,239],\n        [117,201,236],\n        [98,193,233],\n        [79,186,231],\n        [60,178,228],\n        [41,171,226]\n    ];\n    \n    /*\n    var colormap = [\n        \"#79be77\", \n        \"#96b761\", \n        \"#b6ae4c\", \n        \"#e0a433\", \n        \"#f4a029\", \n        \"#fa8e1f\", \n        \"#f47719\", \n        \"#ec5f13\", \n        \"#e4450f\", \n        \"#dc300a\"\n    ];\n    */\n    \n    myself.metadata.extremes = myself._detectExtremes(myself.metadata.data);\n\n    // Define an event that will allows set specific styles for the shapes\n    var layerListeners = {\n        beforefeatureadded: function(e) {\n            \n            var fillValue = myself.metadata.data.resultset[myself.metadata.extremes.id.items.indexOf(e.feature.data.abbrev)][myself.mapping.shape_value];\n                \n            var featureStyle = {\n                fillColor: colorMapManager.mapColor(fillValue, myself.metadata.extremes.shape_value.min, myself.metadata.extremes.shape_value.max, colorMapManager.getColorMap(colormap))    \n            };    \n                \n            e.feature.style = _.extend(_.clone(defaultStyle), featureStyle);\n        }\n    };\n    \n    // Set default styling for the features\n    var defaultStyle = {\n        'fillColor': '#669933',\n        'fillOpacity': .7,\n        'strokeColor': '#000000',\n        'strokeWidth': 2\n    };\n    var basic_style = new OpenLayers.Style(defaultStyle);\n       \n    // Create a new vector layer for the shapes   \n    var vector = new OpenLayers.Layer.Vector(\"GeoJsonShapes\", {\n        rendererOptions: {\n          zIndexing: true\n        },\n        isBaseLayer: false,\n        eventListeners: layerListeners,  // enable the events in the layer\n        styleMap: new OpenLayers.StyleMap({ 'default': basic_style }) // apply default styling\n    });\n    \n    // Create a geoJson parser\n    var geoJSONParser = new OpenLayers.Format.GeoJSON({\n        ignoreExtraDims: true,\n        'internalProjection': new OpenLayers.Projection(\"EPSG:900913\"),\n        'externalProjection': new OpenLayers.Projection(\"EPSG:4326\")\n    });\n        \n    // Read and parse the geoJson shapes\n    var f = geoJsonShapes;\n    var features = geoJSONParser.read(f, \"FeatureCollection\");\n\n    // Add features and layers on the map\n    vector.addFeatures(features);\n    this.mapEngine.map.addLayer(vector);\n} "
     },
     {
      "name": "postFetch",
      "type": "JavaScript",
      "value": "function(data) {\n\n    // Save the resultSet in the component context to be used later\n    this.metadata = {}\n    this.metadata.data = data;\n    \n} "
     },
     {
      "name": "preChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "postChange",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "tooltip",
      "type": "Html",
      "value": ""
     },
     {
      "name": "shapeMouseClick",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOut",
      "type": "JavaScript",
      "value": ""
     },
     {
      "name": "shapeMouseOver",
      "type": "JavaScript",
      "value": ""
     }
    ],
    "rowName": "NewMapComponent",
    "type": "ComponentsNewMapComponent",
    "typeDesc": "Map Component"
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "SCRIPTING",
    "name": "SCRIPTING Queries",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "type": "Label",
      "value": "SCRIPTING Queries"
     }
    ],
    "type": "Label",
    "typeDesc": "<i>Group</i>"
   },
   {
    "id": "eb305374-3e54-4215-a6d7-40db10eb4044",
    "meta": "CDA",
    "meta_conntype": "scripting.scripting",
    "meta_datype": "jsonScriptable",
    "parent": "SCRIPTING",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "southAmericaDS"
     },
     {
      "name": "initscript",
      "type": "String",
      "value": ""
     },
     {
      "name": "language",
      "type": "String",
      "value": "beanshell"
     },
     {
      "name": "access",
      "type": "Access",
      "value": "public"
     },
     {
      "name": "query",
      "type": "JsonScriptableQuery",
      "value": "{\n   \"resultset\":[\n      [\"BRA\", 10, -14.235004, -51.92528, 25, 100],\n      [\"PER\", 20, -9.189967, -75.015152, 3, 120],\n      [\"BOL\", 30, -16.290154, -63.588653, 12, 176],\n      [\"COL\", 15, 4.570868, -74.297333, 25, 45],\n      [\"VEN\", 25, 6.42375, -66.58973, 6, 10],\n      [\"ECU\", 50, -1.831239, -78.183406, 10, 54],\n      [\"GUY\", 5, 4.860416, -58.93018, 11, 23],\n      [\"PRY\", 10, -23.442503, -58.443832, 1, 75],\n      [\"SUR\", 10, 3.919305, -56.027783, 20, 3],\n      [\"URY\", 35, -32.522779, -55.765835, 22, 15],\n      [\"ARG\", 45, -38.416097, -63.616672, 21, 60],\n      [\"CHL\", 40, -35.675147, -71.542969, 9, 41]\n   ],\n\n   \"metadata\":[\n      {\"colIndex\":0,\"colType\":\"String\",\"colName\":\"abbrev\"},\n      {\"colIndex\":1,\"colType\":\"Integer\",\"colName\":\"value\"},\n      {\"colIndex\":2,\"colType\":\"Numeric\",\"colName\":\"latitude\"},\n      {\"colIndex\":3,\"colType\":\"Numeric\",\"colName\":\"longitude\"},\n      {\"colIndex\":4,\"colType\":\"Numeric\",\"colName\":\"r\"},\n      {\"colIndex\":5,\"colType\":\"Numeric\",\"colName\":\"shape_value\"}\n   ]\n}"
     },
     {
      "name": "parameters",
      "type": "CdaParameters",
      "value": "[]"
     },
     {
      "name": "cdacalculatedcolumns",
      "type": "CdaCalculatedColumnsArray",
      "value": "[]"
     },
     {
      "name": "cdacolumns",
      "type": "CdaColumnsArray",
      "value": "[]"
     },
     {
      "name": "output",
      "type": "IndexArray",
      "value": "[]"
     },
     {
      "name": "outputMode",
      "type": "OutputMode",
      "value": "include"
     },
     {
      "name": "cacheKeys",
      "type": "CacheKeysValues",
      "value": "[]"
     },
     {
      "name": "cacheDuration",
      "type": "Integer",
      "value": 3600
     },
     {
      "name": "cache",
      "type": "Boolean",
      "value": "true"
     }
    ],
    "rowName": "jsonScriptable over scripting",
    "type": "ComponentsjsonScriptable_scripting",
    "typeDesc": "jsonScriptable over scripting"
   }
  ]
 },
 "filename": "/public/NMC-samples/shape_markers.cdfde",
 "layout": {
  "rows": [
   {
    "id": "ed59d996-9f21-56ae-c012-a49bf1eef510",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "colorMapManager"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${solution:resources/js/colorMapManager.js}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Javascript"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "8cdcdb82-ad7c-98b2-1d42-58215268b50e",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "geoJsonShapes"
     },
     {
      "name": "resourceFile",
      "type": "ResourceFile",
      "value": "${solution:resources/js/loadMarkersFile.js}"
     },
     {
      "name": "resourceType",
      "type": "Label",
      "value": "Javascript"
     }
    ],
    "type": "LayoutResourceFile",
    "typeDesc": "Resource"
   },
   {
    "id": "b7f26640-c94d-5420-6b8f-edb5b55c6c27",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "e3a8ce35-1a33-3892-af2d-727b5ce0a1e1",
    "parent": "b7f26640-c94d-5420-6b8f-edb5b55c6c27",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   },
   {
    "id": "dd3c7f67-ddd0-93be-e653-bcddae7b7ca1",
    "parent": "e3a8ce35-1a33-3892-af2d-727b5ce0a1e1",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": ""
     },
     {
      "name": "html",
      "type": "Html",
      "value": "Shape color by a function: "
     },
     {
      "name": "fontSize",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "color",
      "type": "Color",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutHtml",
    "typeDesc": "Html"
   },
   {
    "id": "add4affb-f033-59a6-d0e5-36b416aa3c49",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "maps"
     },
     {
      "name": "height",
      "type": "Integer",
      "value": ""
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutRow",
    "typeDesc": "Row"
   },
   {
    "id": "129dc734-1327-13cb-bf6f-4485909171ed",
    "parent": "add4affb-f033-59a6-d0e5-36b416aa3c49",
    "properties": [
     {
      "name": "name",
      "type": "Id",
      "value": "mapDynObj"
     },
     {
      "name": "bootstrapExtraSmall",
      "type": "String",
      "value": "12"
     },
     {
      "name": "bootstrapSmall",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapMedium",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapLarge",
      "type": "String",
      "value": ""
     },
     {
      "name": "bootstrapCssClass",
      "type": "String",
      "value": ""
     },
     {
      "name": "height",
      "type": "Integer",
      "value": "500"
     },
     {
      "name": "backgroundColor",
      "type": "Color",
      "value": ""
     },
     {
      "name": "roundCorners",
      "type": "RoundCorners",
      "value": ""
     },
     {
      "name": "textAlign",
      "type": "TextAlign",
      "value": ""
     },
     {
      "name": "cssClass",
      "type": "String",
      "value": ""
     }
    ],
    "type": "LayoutBootstrapColumn",
    "typeDesc": "Column"
   }
  ],
  "title": "CDF - Sample structure"
 }
}